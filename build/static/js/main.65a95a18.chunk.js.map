{"version":3,"sources":["component/NavBar.js","redux/books/bookSlice.js","component/Book.js","component/BookList.js","component/BookForm.js","component/MyBooks.js","component/Categories.js","App.js","redux/category/categorySlice.js","redux/store.js","index.js"],"names":["NavBar","React","createElement","className","Link","to","url","getBooks","createAsyncThunk","async","dataStream","axios","data","Object","entries","newDataArray","forEach","element","newObject","id","title","author","category","push","changeToObjectData","error","addBooks","_ref","post","itemId","deleteBook","delete","concat","bookSlice","createSlice","name","initialState","books","isLoading","isError","isSuccessful","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","Book","dispatch","useDispatch","map","book","key","type","onClick","BookList","useSelector","store","useEffect","length","BookForm","input","setInput","useState","getInputs","e","value","target","inputs","htmlFor","onChange","placeholder","preventDefault","uuidv4","MyBooks","Fragment","Categories","App","Routes","Route","path","categoriesSlice","status","reducers","actions","configureStore","reducer","booksReducer","categoriesReducer","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter","Provider"],"mappings":"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","file":"static/js/main.65a95a18.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction NavBar() {\n  return (\n    <div>\n      <h2>Samepage BookStore</h2>\n      <div>\n        <ul className=\"nav-list\">\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/Categories\">Categories</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default NavBar;\n","/* eslint-disable import/no-extraneous-dependencies */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst url = 'https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi/apps/PWiB57pJPPFLc1okU4BW/books';\n\nconst initialState = {\n  books: [],\n  isLoading: false,\n  isError: false,\n  isSuccessful: false,\n};\n\nconst changeToObjectData = (data) => {\n  const newDataArray = [];\n  data.forEach((element) => {\n    const newObject = {\n      id: element[0],\n      title: element[1][0].title,\n      author: element[1][0].author,\n      category: element[1][0].category,\n    };\n    newDataArray.push(newObject);\n  });\n  return newDataArray;\n};\n\nexport const getBooks = createAsyncThunk('book/getBooksData', async () => {\n  try {\n    const dataStream = await axios(url);\n    let data = Object.entries(dataStream.data);\n    data = changeToObjectData(data);\n    return data;\n  } catch (error) {\n    return error;\n  }\n});\n\nexport const addBooks = createAsyncThunk(\n  'book/addBooks',\n  async ({ id, title, author }) => {\n    try {\n      const dataStream = await axios.post(url, {\n        itemId: id,\n        title,\n        author,\n        category: 'Non fiction',\n      });\n      return dataStream;\n    } catch (error) {\n      return error;\n    }\n  },\n);\n\nexport const deleteBook = createAsyncThunk('book/deleteBook', async (id) => {\n  try {\n    const dataStream = await axios.delete(`${url}/${id}`);\n    return dataStream;\n  } catch (error) {\n    return error;\n  }\n});\n\nconst bookSlice = createSlice({\n  name: 'book',\n  initialState,\n  extraReducers: (builder) => {\n    builder.addCase(getBooks.pending, (state) => {\n      state.isLoading = true;\n    });\n\n    builder.addCase(getBooks.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.books = action.payload;\n    });\n\n    builder.addCase(getBooks.rejected, (state) => {\n      state.isLoading = false;\n      state.isError = true;\n    });\n\n    builder.addCase(addBooks.pending, (state) => {\n      state.isSuccessful = false;\n    });\n\n    builder.addCase(addBooks.fulfilled, (state) => {\n      state.isSuccessful = true;\n    });\n\n    builder.addCase(addBooks.rejected, (state) => {\n      state.isSuccessful = false;\n    });\n\n    builder.addCase(deleteBook.pending, (state) => {\n      state.isSuccessful = false;\n    });\n\n    builder.addCase(deleteBook.fulfilled, (state) => {\n      state.isSuccessful = true;\n    });\n\n    builder.addCase(deleteBook.rejected, (state) => {\n      state.isSuccessful = false;\n    });\n  },\n});\n\nexport default bookSlice.reducer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteBook } from '../redux/books/bookSlice';\n\nfunction Book({ books }) {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <ul>\n        {books.map((book) => (\n          <li key={book.id}>\n            <div>\n              <div>\n                <p>{book.category}</p>\n                <h1>{book.title}</h1>\n                <p>{book.author}</p>\n                <div>\n                  <button type=\"submit\">comments</button>\n                  <div className=\"border\" />\n                  <button\n                    type=\"submit\"\n                    onClick={() => dispatch(deleteBook(book.id))}\n                  >\n                    Remove\n                  </button>\n                  <div className=\"border\" />\n                  <button type=\"submit\">Edit</button>\n                </div>\n              </div>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nBook.propTypes = {\n  books: PropTypes.arrayOf(\n    PropTypes.shape({\n      item_id: PropTypes.string.isRequired,\n      category: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\nexport default Book;\n","import { React, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Book from './Book';\nimport { getBooks } from '../redux/books/bookSlice';\n\nfunction BookList() {\n  const {\n    books, isLoading, isError, isSuccessful,\n  } = useSelector(\n    (store) => store.books,\n  );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getBooks());\n  }, [dispatch, isSuccessful]);\n  if (isLoading) {\n    return <p>Loading....Please wait</p>;\n  }\n  if (isError) {\n    return <p>Sorry, please try again</p>;\n  }\n  if (books.length === 0) return <p>Sorry, no books available at the moment</p>;\n\n  return <Book books={books} />;\n}\nexport default BookList;\n","import { React, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { addBooks } from '../redux/books/bookSlice';\n\nfunction BookForm() {\n  const [input, setInput] = useState({\n    title: '',\n    author: '',\n  });\n  const dispatch = useDispatch();\n  const getInputs = (e) => {\n    const { name, value } = e.target;\n    const inputs = { [name]: value };\n    setInput({ ...input, ...inputs });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const id = uuidv4();\n    const book = { id, ...input };\n    dispatch(addBooks(book));\n    setInput(input);\n  };\n  return (\n    <form>\n      <label htmlFor=\"label\">\n        ADD NEW BOOK\n        <div>\n          <input\n            type=\"text\"\n            onChange={getInputs}\n            name=\"title\"\n            value={input.title}\n            placeholder=\"Book Title\"\n          />\n          <br />\n          <input\n            type=\"text\"\n            name=\"author\"\n            onChange={getInputs}\n            value={input.author}\n            placeholder=\"Author\"\n          />\n          <br />\n          <button type=\"submit\" onClick={handleSubmit}>\n            ADD BOOK\n          </button>\n        </div>\n      </label>\n    </form>\n  );\n}\n\nexport default BookForm;\n","import React from 'react';\nimport BookList from './BookList';\nimport BookForm from './BookForm';\n\nfunction MyBooks() {\n  return (\n    <>\n      <div>\n        <BookList />\n        <BookForm />\n      </div>\n    </>\n  );\n}\n\nexport default MyBooks;\n","import React from 'react';\n\nfunction Categories() {\n  return (\n    <div>\n      <h2>A comprehensive guide to the different types of books</h2>\n    </div>\n  );\n}\n\nexport default Categories;\n","import React from 'react';\nimport './App.css';\nimport { Routes, Route } from 'react-router-dom';\nimport NavBar from './component/NavBar';\nimport MyBooks from './component/MyBooks';\nimport Categories from './component/Categories';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Routes>\n        <Route path=\"/\" element={<MyBooks />} />\n        <Route path=\"/Categories\" element={<Categories />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  category: [],\n  status: 'Under Construction',\n};\n\nconst categoriesSlice = createSlice({\n  name: 'category',\n  initialState,\n  reducers: {\n    category: (state) => {\n      state.status = 'Under Construction';\n    },\n  },\n});\n\nexport default categoriesSlice.reducer;\nexport const { category } = categoriesSlice.actions;\n","import { configureStore } from '@reduxjs/toolkit';\nimport booksReducer from './books/bookSlice';\nimport categoriesReducer from './category/categorySlice';\n\nconst store = configureStore({\n  reducer: {\n    books: booksReducer,\n    category: categoriesReducer,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n);\n"],"sourceRoot":""}